<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--suppress SqlNoDataSourceInspection, SqlDialectInspection, SqlResolve -->
<mapper namespace="org.clever.security.mapper.QueryMapper">

    <select id="allSysName" resultType="string">
        select distinct sys_name
        from user_sys
    </select>

    <select id="allRoleName" resultType="string">
        select distinct name
        from role
    </select>

    <select id="findRoleNameByUser" resultType="string">
        select b.name
        from user_role a
                 left join role b on (a.role_name = b.name)
        where a.username = #{username}
    </select>

    <select id="findPermissionStrByRole" resultType="string">
        select permission_str
        from role_permission
        where role_name = #{roleName}
        order by permission_str asc
    </select>

    <select id="findRememberMeToken" resultType="org.clever.security.entity.model.UserRememberMeToken">
        select
            a.*,
            b.id as user_id,
            b.user_type,
            b.telephone,
            b.email,
            b.expired_time,
            b.locked,
            b.enabled,
            b.description
        from remember_me_token a
            left join user b on (a.username = b.username)
        <where>
            <if test="query.username!=null and query.username!=''">
                and a.username = #{query.username}
            </if>
            <if test="query.sysName!=null and query.sysName!=''">
                and a.sys_name = #{query.sysName}
            </if>
            <if test="query.lastUsedStart!=null">
                and a.last_used >= #{query.lastUsedStart}
            </if>
            <if test="query.lastUsedEnd!=null">
                <![CDATA[ and a.last_used <= #{query.lastUsedEnd} ]]>
            </if>
            <if test="query.telephone!=null and query.telephone!=''">
                and b.telephone = #{query.telephone}
            </if>
            <if test="query.email!=null and query.email!=''">
                and b.email = #{query.email}
            </if>
        </where>
        order by a.update_at DESC, a.last_used DESC
    </select>

    <select id="findUserLoginLog" resultType="org.clever.security.entity.model.UserLoginLogModel">
        select a.*,
               b.id as user_id,
               b.user_type,
               b.telephone,
               b.email,
               b.expired_time,
               b.locked,
               b.enabled,
               b.description
        from user_login_log a
            left join user b on (a.username = b.username)
        <where>
            <if test="query.username!=null and query.username!=''">
                and a.username = #{query.username}
            </if>
            <if test="query.sysName!=null and query.sysName!=''">
                and a.sys_name = #{query.sysName}
            </if>
            <if test="query.loginTimeStart!=null">
                and a.login_time >= #{query.loginTimeStart}
            </if>
            <if test="query.loginTimeEnd!=null">
                <![CDATA[ and a.login_time <= #{query.loginTimeEnd} ]]>
            </if>
            <if test="query.loginState!=null">
                and a.login_state = #{query.loginState}
            </if>
            <if test="query.telephone!=null and query.telephone!=''">
                and b.telephone = #{query.telephone}
            </if>
            <if test="query.email!=null and query.email!=''">
                and b.email = #{query.email}
            </if>
        </where>
        order by a.login_time DESC, a.login_state ASC, a.update_at DESC
    </select>

    <select id="findServiceSys" resultType="org.clever.security.entity.ServiceSys">
        select
          *
        from service_sys
        <where>
          <if test="query.sysName!=null and query.sysName!=''">
              and sys_name like concat('%', #{query.sysName}, '%')
          </if>
            <if test="query.loginModel!=null">
                and login_model = #{query.loginModel}
            </if>
        </where>
        order by sys_name
    </select>
</mapper>